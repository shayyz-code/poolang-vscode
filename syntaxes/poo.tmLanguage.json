{
  "name": "Poo",
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "scopeName": "source.poo",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#control-keywords"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#booleans"
    },
    {
      "include": "#string"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#functions"
    }
  ],
  "repository": {
    "control-keywords": {
      "patterns": [
        {
          "name": "keyword.control.poo",
          "match": "\\b(poo|poof|use|mut|return|while|for|in|if|elif|else)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.poo",
          "match": "\\*|/|\\+|-|=\\b(and|or|not|)\\b"
        }
      ]
    },
    "booleans": {
      "patterns": [
        {
          "name": "constant.language.boolean.poo",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "string": {
      "patterns": [
        {
          "name": "string.quoted.double.poo",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.poo",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.poo",
          "match": "\\b\\d+\\.?\\d*\\b"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.parameter.poo",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "meta.function.poo",
          "begin": "\\bpoof\\s+[a-zA-Z_][a-zA-Z0-9_]*",
          "end": "\\{",
          "captures": {
            "0": {
              "name": "entity.name.function.poo"
            }
          },
          "patterns": [
            {
              "name": "variable.parameter.function.poo",
              "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
            },
            {
              "name": "storage.type.poo",
              "match": "\\b(vec|int|float|void|bool|string)\\b"
            }
          ]
        },
        {
          "name": "support.function.std.poo",
          "match": "\\bpout\\b"
        },
        {
          "name": "support.method.builtin.vector.poo",
          "match": "\\bpop\\b"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.poo",
          "match": "//.*$"
        }
      ]
    }
  },
  "fileTypes": ["poo"]
}
